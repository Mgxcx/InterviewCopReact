[{"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reportWebVitals.js":"1","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/PasswordRecoveryScreen.js":"2","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ChatScreen.js":"3","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AdvicesScreen.js":"4","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/score.reducer.js":"5","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/job.reducer.js":"6","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/LoginScreen.js":"7","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/HomeScreen.js":"8","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/App.js":"9","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreen.js":"10","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/username.reducer.js":"11","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/detailedscore.reducer.js":"12","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/icop.reducer.js":"13","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenHome.js":"14","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ShopScreen.js":"15","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenResult.js":"16","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/index.js":"17","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/WelcomeScreen.js":"18","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AccountScreen.js":"19","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/county.reducer.js":"20"},{"size":362,"mtime":1609240751474,"results":"21","hashOfConfig":"22"},{"size":8683,"mtime":1609329270861,"results":"23","hashOfConfig":"22"},{"size":8018,"mtime":1609240751467,"results":"24","hashOfConfig":"22"},{"size":3013,"mtime":1609240751465,"results":"25","hashOfConfig":"22"},{"size":146,"mtime":1609240751474,"results":"26","hashOfConfig":"22"},{"size":149,"mtime":1609240751473,"results":"27","hashOfConfig":"22"},{"size":10648,"mtime":1609321857301,"results":"28","hashOfConfig":"22"},{"size":2953,"mtime":1609340252507,"results":"29","hashOfConfig":"22"},{"size":2152,"mtime":1609240751465,"results":"30","hashOfConfig":"22"},{"size":11574,"mtime":1609584031450,"results":"31","hashOfConfig":"22"},{"size":155,"mtime":1609240751475,"results":"32","hashOfConfig":"22"},{"size":189,"mtime":1609240751472,"results":"33","hashOfConfig":"22"},{"size":153,"mtime":1609240751473,"results":"34","hashOfConfig":"22"},{"size":22381,"mtime":1609586583760,"results":"35","hashOfConfig":"22"},{"size":15482,"mtime":1609240751470,"results":"36","hashOfConfig":"22"},{"size":17789,"mtime":1609240751469,"results":"37","hashOfConfig":"22"},{"size":547,"mtime":1609240751471,"results":"38","hashOfConfig":"22"},{"size":1741,"mtime":1609240751470,"results":"39","hashOfConfig":"22"},{"size":9152,"mtime":1609240751466,"results":"40","hashOfConfig":"22"},{"size":161,"mtime":1609240751472,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"safdpa",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reportWebVitals.js",[],["93","94"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/PasswordRecoveryScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ChatScreen.js",[],["95","96"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AdvicesScreen.js",[],["97","98"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/score.reducer.js",["99","100"],"export default function (score = 0, action) {\n  if (action.type == \"saveLastScore\") {\n    return action.score;\n  } else {\n    return score;\n  }\n}\n","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/job.reducer.js",["101","102"],"export default function (job = \"\", action) {\n    if (action.type == \"saveJob\") {\n      return action.job;\n    } else {\n      return job;\n    }\n  }\n  ","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/LoginScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/HomeScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/App.js",[],["103","104"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreen.js",["105"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Image, Overlay } from \"react-bootstrap\";\nimport \"../stylesheets/interviewscreen.css\";\nimport { connect } from \"react-redux\";\n\n// import {\n//   useFonts,\n//   Montserrat_400Regular,\n//   Montserrat_500Medium,\n//   Montserrat_400Regular_Italic,\n//   Montserrat_700Bold,\n// } from \"@expo-google-fonts/montserrat\";\n\nfunction InterviewScreen({ username, onSubmitLastScore, onSubmitDetailedScore, icop }) {\n  const [questionNumber, setQuestionNumber] = useState(1); //compteur des questions affiché sur la top bar entretien\n  const [questionList, setQuestionList] = useState(); //stocke les données des questions envoyées par le back (questions,réponses,conseils etc)\n  const [lastQuestion, setLastQuestion] = useState(false); // état pour pouvoir gérer la redirection au résultat après la question 10\n\n  const [tempScore, setTempScore] = useState(0); //score temporaire associé à la réponse actuellement sélectionnée (pas encore confirmée par le user)\n\n  const [score, setScore] = useState([]); //lorsque la réponse est confirmée par le user, le score final est incrémenté\n  const [category, setCategory] = useState([]); //lorsque la réponse est confirmée par le user, la liste des categories de questions est enregistrée (pour envoi dans redux à la fin)\n\n  //états liés aux réponses, un état passe à true si la réponse associée est sélectionnée par le user\n  const [answerA, setAnswerA] = useState(false);\n  const [answerB, setAnswerB] = useState(false);\n  const [answerC, setAnswerC] = useState(false);\n  const [answerD, setAnswerD] = useState(false);\n\n  //état gérant l'overlay du conseil\n  const [overlayVisible, setOverlayVisible] = useState(false);\n  const target = useRef(null);\n\n  //charge les questions (générées aléatoirement par le backend)\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(`/generate-questions?icop=${icop}`);\n      const body = await data.json();\n      if (body.result === true) {\n        setQuestionList(body.questionsArray);\n      }\n    };\n    fetchData();\n  }, []);\n\n  //mécanique lorsque le user choisit une réponse\n  const handleSelectedAnswer = (order, points) => {\n    if (order === \"A\") {\n      setAnswerA(true);\n      setAnswerB(false);\n      setAnswerC(false);\n      setAnswerD(false);\n    } else if (order === \"B\") {\n      setAnswerA(false);\n      setAnswerB(true);\n      setAnswerC(false);\n      setAnswerD(false);\n    } else if (order === \"C\") {\n      setAnswerA(false);\n      setAnswerB(false);\n      setAnswerC(true);\n      setAnswerD(false);\n    } else {\n      setAnswerA(false);\n      setAnswerB(false);\n      setAnswerC(false);\n      setAnswerD(true);\n    }\n\n    setTempScore(points);\n  };\n\n  //mécanique qui incrémente le score et charge la question suivante\n  const handleNextQuestion = (newCategory) => {\n    if (answerA || answerB || answerC || answerD) {\n      //vérification qu'une réponse a bien été sélectionnée par l'utilisateur\n      setScore([...score, tempScore]); //enregistrement du score\n      setCategory([...category, newCategory]);\n      questionNumber < 10 && setQuestionNumber((prev) => prev + 1); //incrémente le compteur des questions\n      //réinitialisation des états liés aux réponses\n      setAnswerA(false);\n      setAnswerB(false);\n      setAnswerC(false);\n      setAnswerD(false);\n    }\n  };\n\n  // //envoi du score et du username au back à la fin de l'entretien (une fois la question 10 validée)\n  const handleSubmitLastQuestion = async () => {\n    const finalScore = score.reduce((a, b) => a + b, 0);\n\n    const data = await fetch(\"/interviewsave-scoreandtrophy\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `usernameFromFront=${username}&scoreFromFront=${finalScore}`,\n    });\n    const body = await data.json();\n    if (body.result === true) {\n      console.log(\"je suis dans le true\");\n      onSubmitLastScore(finalScore); //envoie le score total dans redux\n      onSubmitDetailedScore({ score, category }); //envoie le resultat de chaque question dans redux\n      setLastQuestion(true);\n    }\n  };\n\n  //déclenche handleSubmitLastQuestion après la dernière question\n\n  if (score.length === 10) {\n    handleSubmitLastQuestion();\n  }\n\n  // déclenche la redirection vers la page Interview Screen Result si le user est arrivé à la question 10 et appuie sur OK du dernier conseil\n  if (lastQuestion) {\n    return <Redirect to=\"/interviewscreenresult\" />;\n  }\n\n  // Remplit la variable questiondisplay si l'on a bien récupéré la liste de questions/réponses du backend\n  let questionDisplay;\n  if (questionList) {\n    questionDisplay = questionList[questionNumber - 1]; //lorsque le compteur des questions s'actualise, la question suivante est chargée\n  }\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light justify-content-start topbar\">\n        <Image src=\"../images/MikeChickenRight.png\" className=\"logo\" />\n        <p className=\"title\">InterviewCop</p>\n        <button\n          class=\"navbar-toggler ml-auto\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon togglerstyle\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link linkstyle\" href=\"/home\">\n                Accueil\n              </a>\n            </li>\n\n            <li className=\"nav-item\">\n              <a className=\"nav-link linkstyle\" href=\"/account\">\n                Mon Compte\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link linkstyle\" href=\"/interviewscreenhome\">\n                Entretien\n              </a>\n            </li>\n\n            <li className=\"nav-item\">\n              <a className=\"nav-link linkstyle\" href=\"/advices\">\n                Conseils\n              </a>\n            </li>\n\n            <li className=\"nav-item\">\n              <a className=\"nav-link linkstyle\" href=\"/shop\">\n                Shop\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"container-fluid interview\">\n        {questionDisplay && (\n          <div className=\"col\">\n            <div className=\"row align-items-center justify-content-center\">\n              <p className=\"title2\">Question {questionNumber}/10</p>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <p className=\"title2\">{questionDisplay.question}</p>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <button\n                className={answerA ? \"buttonanswerselected\" : \"buttonanswer\"}\n                onClick={() => {\n                  handleSelectedAnswer(\"A\", questionDisplay.answers[0].points);\n                }}\n                type=\"button\"\n              >\n                {questionDisplay.answers[0].text}\n              </button>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <button\n                className={answerB ? \"buttonanswerselected\" : \"buttonanswer\"}\n                onClick={() => {\n                  handleSelectedAnswer(\"B\", questionDisplay.answers[1].points);\n                }}\n                type=\"button\"\n              >\n                {questionDisplay.answers[1].text}\n              </button>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <button\n                className={answerC ? \"buttonanswerselected\" : \"buttonanswer\"}\n                onClick={() => {\n                  handleSelectedAnswer(\"C\", questionDisplay.answers[2].points);\n                }}\n                type=\"button\"\n              >\n                {questionDisplay.answers[2].text}\n              </button>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <button\n                className={answerD ? \"buttonanswerselected\" : \"buttonanswer\"}\n                onClick={() => {\n                  handleSelectedAnswer(\"D\", questionDisplay.answers[3].points);\n                }}\n                type=\"button\"\n              >\n                {questionDisplay.answers[3].text}\n              </button>\n            </div>\n            <div className=\"row align-items-center justify-content-center\">\n              <button\n                className=\"button\"\n                ref={target}\n                onClick={() => {\n                  setOverlayVisible(true);\n                }}\n                type=\"button\"\n              >\n                >\n              </button>\n            </div>\n            <Overlay target={target.current} show={overlayVisible}>\n              {({ arrowProps, show: _show, popper, ...props }) => (\n                <div\n                  {...props}\n                  style={{\n                    display: \"flex\",\n                    position: \"absolute\",\n                    alignSelf: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    borderColor: \"#4fa2c7\",\n                    marginTop: \"60px\",\n                    backgroundColor: \"#4fa2c7\",\n                    width: \"50%\",\n                    height: \"60%\",\n                    color: \"#fffefa\",\n                    borderRadius: 20,\n                    opacity: 0.97,\n                    ...props.style,\n                  }}\n                >\n                  <div className=\"col\">\n                    <div className=\"row align-items-center justify-content-center\">\n                      <Image\n                        src={icop === \"MikeChicken\" ? \"../images/MikeChickenSmall.png\" : \"../images/AgentToufSmall.png\"}\n                        className=\"image\"\n                      />\n                    </div>\n                    <div className=\"row align-items-center justify-content-center\">\n                      <p className=\"advicetext\"> {questionDisplay.advice} </p>\n                    </div>\n                    <div className=\"row align-items-center justify-content-center\">\n                      <button\n                        className=\"button\"\n                        ref={target}\n                        onClick={() => {\n                          setOverlayVisible(false);\n                          handleNextQuestion(questionDisplay.category);\n                        }}\n                        type=\"button\"\n                      >\n                        Ok\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Overlay>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { username: state.username, icop: state.icop };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSubmitLastScore: function (score) {\n      dispatch({ type: \"saveLastScore\", score });\n    },\n    onSubmitDetailedScore: function (detailedScore) {\n      dispatch({ type: \"saveDetailedScore\", detailedScore });\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterviewScreen);\n","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/username.reducer.js",["106","107"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/detailedscore.reducer.js",["108","109"],"export default function (detailedScore = {}, action) {\n    if (action.type == \"saveDetailedScore\") {\n      return action.detailedScore;\n    } else {\n      return detailedScore;\n    }\n  }\n  ","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/icop.reducer.js",["110","111"],"export default function (icop = \"\", action) {\n    if (action.type == \"saveIcop\") {\n      return action.icop;\n    } else {\n      return icop;\n    }\n  }\n  ","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenHome.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ShopScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenResult.js",[],["112","113"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/index.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/WelcomeScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AccountScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/county.reducer.js",["114","115"],"export default function (county = \"\", action) {\n    if (action.type == \"saveCounty\") {\n      return action.county;\n    } else {\n      return county;\n    }\n  }\n  ",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"116","replacedBy":"122"},{"ruleId":"118","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":2},{"ruleId":"127","severity":1,"message":"128","line":2,"column":19,"nodeType":"129","messageId":"130","endLine":2,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":23},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":45,"column":6,"nodeType":"135","endLine":45,"endColumn":8,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":2},{"ruleId":"127","severity":1,"message":"128","line":2,"column":19,"nodeType":"129","messageId":"130","endLine":2,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":23},{"ruleId":"116","replacedBy":"137"},{"ruleId":"118","replacedBy":"138"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":7,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":23},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],["139"],["140"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'icop'. Either include it or remove the dependency array.","ArrayExpression",["141"],["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [icop]",{"range":"144","text":"145"},[2140,2142],"[icop]"]