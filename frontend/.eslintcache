[{"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reportWebVitals.js":"1","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/PasswordRecoveryScreen.js":"2","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ChatScreen.js":"3","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AdvicesScreen.js":"4","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/score.reducer.js":"5","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/job.reducer.js":"6","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/LoginScreen.js":"7","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/HomeScreen.js":"8","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/App.js":"9","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreen.js":"10","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/username.reducer.js":"11","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/detailedscore.reducer.js":"12","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/icop.reducer.js":"13","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenHome.js":"14","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ShopScreen.js":"15","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenResult.js":"16","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/index.js":"17","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/WelcomeScreen.js":"18","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AccountScreen.js":"19","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/county.reducer.js":"20","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/NavBar.js":"21","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/NavBar2.js":"22"},{"size":362,"mtime":1609240751474,"results":"23","hashOfConfig":"24"},{"size":7933,"mtime":1610047051953,"results":"25","hashOfConfig":"26"},{"size":4553,"mtime":1610042636239,"results":"27","hashOfConfig":"26"},{"size":2950,"mtime":1610037519437,"results":"28","hashOfConfig":"24"},{"size":146,"mtime":1609240751474,"results":"29","hashOfConfig":"24"},{"size":149,"mtime":1609240751473,"results":"30","hashOfConfig":"24"},{"size":9816,"mtime":1610047014602,"results":"31","hashOfConfig":"26"},{"size":2319,"mtime":1610036831241,"results":"32","hashOfConfig":"24"},{"size":2152,"mtime":1609240751465,"results":"33","hashOfConfig":"24"},{"size":9303,"mtime":1610037184215,"results":"34","hashOfConfig":"24"},{"size":155,"mtime":1609240751475,"results":"35","hashOfConfig":"24"},{"size":189,"mtime":1609240751472,"results":"36","hashOfConfig":"24"},{"size":153,"mtime":1609240751473,"results":"37","hashOfConfig":"24"},{"size":19116,"mtime":1610036909148,"results":"38","hashOfConfig":"24"},{"size":15129,"mtime":1610039343826,"results":"39","hashOfConfig":"24"},{"size":16382,"mtime":1610040759952,"results":"40","hashOfConfig":"24"},{"size":496,"mtime":1610041570943,"results":"41","hashOfConfig":"24"},{"size":1471,"mtime":1610036040545,"results":"42","hashOfConfig":"24"},{"size":7630,"mtime":1610042393729,"results":"43","hashOfConfig":"26"},{"size":161,"mtime":1609240751472,"results":"44","hashOfConfig":"24"},{"size":1261,"mtime":1610052951787,"results":"45","hashOfConfig":"24"},{"size":449,"mtime":1610040932811,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"safdpa",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14zbjnu",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reportWebVitals.js",[],["105","106"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/PasswordRecoveryScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ChatScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AdvicesScreen.js",[],["107","108"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/score.reducer.js",["109","110"],"export default function (score = 0, action) {\n  if (action.type == \"saveLastScore\") {\n    return action.score;\n  } else {\n    return score;\n  }\n}\n","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/job.reducer.js",["111","112"],"export default function (job = \"\", action) {\n    if (action.type == \"saveJob\") {\n      return action.job;\n    } else {\n      return job;\n    }\n  }\n  ","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/LoginScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/HomeScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/App.js",[],["113","114"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreen.js",["115","116"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/username.reducer.js",["117","118"],"export default function (username = \"\", action) {\n  if (action.type == \"saveUsername\") {\n    return action.username;\n  } else {\n    return username;\n  }\n}\n","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/detailedscore.reducer.js",["119","120"],"export default function (detailedScore = {}, action) {\n    if (action.type == \"saveDetailedScore\") {\n      return action.detailedScore;\n    } else {\n      return detailedScore;\n    }\n  }\n  ",["121","122"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/icop.reducer.js",["123","124"],"export default function (icop = \"\", action) {\n    if (action.type == \"saveIcop\") {\n      return action.icop;\n    } else {\n      return icop;\n    }\n  }\n  ",["125","126"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenHome.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/ShopScreen.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../stylesheets/shopscreen.css\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Divider from \"@material-ui/core/Divider\";\nimport NavBar from \"./NavBar\";\n\n// styles des inputs et divider\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  divider: {\n    width: \"100%\",\n    margin: 0,\n    marginTop: 20,\n    height: 2,\n    backgroundColor: \"#0773a3\",\n  },\n}));\n\n// styles des inputs\nconst ValidationTextField = withStyles({\n  root: {\n    \"& input:valid + fieldset\": {\n      color: \"#4FA2C7\",\n      borderColor: \"#4FA2C7\",\n      borderWidth: 2,\n    },\n    \"& input:invalid + fieldset\": {\n      color: \"#4FA2C7\",\n      borderColor: \"#4FA2C7\",\n      borderWidth: 2,\n    },\n    \"& input:invalid:hover + fieldset\": {\n      color: \"#4FA2C7\",\n      borderColor: \"#4FA2C7\",\n      borderWidth: 2,\n    },\n    \"& input:valid:hover + fieldset\": {\n      color: \"#0773a3\",\n      borderColor: \"#0773a3\",\n      borderWidth: 2,\n      padding: \"4px !important\",\n    },\n    \"& input:valid:focus + fieldset\": {\n      color: \"#0773a3\",\n      borderColor: \"#0773a3\",\n      borderWidth: 2,\n      padding: \"4px !important\",\n    },\n    \"& label.Mui-focused\": {\n      color: \"#0773a3\",\n    },\n    \"& label\": {\n      color: \"#4FA2C7\",\n    },\n    \"& input\": {\n      color: \"#0773a3\",\n      width: \"300px\",\n    },\n  },\n})(TextField);\n\n// styles des checkboxes\nconst BlueCheckbox = withStyles({\n  root: {\n    color: \"#4FA2C7\",\n    \"&$checked\": {\n      color: \"#0773a3\",\n    },\n  },\n  checked: {\n    color: \"#0773a3\",\n  },\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction ShopScreen({ username }) {\n  const [overlayVisible, setOverlayVisible] = useState(false);\n  const [overlayVisible2, setOverlayVisible2] = useState(false);\n  const [userPackage, setUserPackage] = useState();\n  const [packageId, setPackageId] = useState();\n  const [price, setPrice] = useState();\n  const [usernameCard, setUsernameCard] = useState();\n  const [creditCardNumbers, setCreditCardNumbers] = useState();\n  const [expirationMonth, setExpirationMonth] = useState();\n  const [expirationYear, setExpirationYear] = useState();\n  const [CVC, setCVC] = useState();\n  const [errorInformationPayment, setErrorInformationPayment] = useState();\n  const [errorPayment, setErrorPayment] = useState();\n  const [listErrors, setListErrors] = useState();\n\n  const [redirectAccount, setRedirectAccount] = useState(false);\n\n  const classes = useStyles();\n\n  //charge le package du user via le Back (via la BDD)\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetch(`/shopfind-package?usernameFromFront=${username}`);\n      const body = await data.json();\n      if (body.result === true) {\n        setUserPackage(body.packageDataBase);\n      } else {\n        setListErrors(body.error);\n      }\n    };\n    fetchData();\n    setUsernameCard(\"\");\n    setCreditCardNumbers(\"\");\n    setExpirationMonth(\"\");\n    setExpirationYear(\"\");\n    setCVC(\"\");\n  }, []);\n\n  const toggleOverlay = () => {\n    setOverlayVisible(!overlayVisible);\n  };\n\n  const toggleOverlay2 = () => {\n    setOverlayVisible2(!overlayVisible2);\n  };\n\n  //se déclenche quand le user veut changer de package et doit payer\n  useEffect(() => {\n    if (packageId) {\n      toggleOverlay();\n    }\n  }, [packageId]);\n\n  const handleSubmitPay = () => {\n    let payment = false;\n    const isCardValid = {\n      cardnumbers: \"4242424242424242\",\n      expMonth: 10,\n      expYear: 21,\n      cvc: \"888\",\n    };\n    if (usernameCard && creditCardNumbers && expirationMonth && expirationYear && CVC) {\n      setErrorInformationPayment(\"\");\n\n      if (\n        isCardValid.cardnumbers == creditCardNumbers &&\n        isCardValid.expMonth == expirationMonth &&\n        isCardValid.expYear == expirationYear &&\n        isCardValid.cvc == CVC\n      ) {\n        toggleOverlay();\n        toggleOverlay2();\n        payment = true;\n        setErrorPayment(\"\");\n      } else {\n        setErrorPayment(\"Le paiement a échoué\");\n      }\n\n      if (payment == true) {\n        const fetchData2 = async () => {\n          const data = await fetch(`/shopupdate-package?usernameFromFront=${username}&packageIdFromFront=${packageId}`);\n          const body = await data.json();\n          if (body.result === true) {\n            setUserPackage(body.packageDataBase);\n          } else {\n            setListErrors(body.error);\n          }\n        };\n        fetchData2();\n      }\n    } else {\n      setErrorInformationPayment(\"Tous les champs n'ont pas été remplis\");\n    }\n  };\n\n  const handleSubmitChangePackage = (idPackage) => {\n    const fetchData3 = async () => {\n      const data = await fetch(`/shopupdate-package?usernameFromFront=${username}&packageIdFromFront=${idPackage}`);\n      const body = await data.json();\n      if (body.result === true) {\n        setUserPackage(body.packageDataBase);\n      } else {\n        setListErrors(body.error);\n      }\n    };\n    fetchData3();\n  };\n\n  // déclenche la redirection vers Account si le user a choisi un nouveau package, que le paiement s'est bien passé et qu'il clique sur Ok à la fin !\n  if (redirectAccount) {\n    return <Redirect to=\"/account\" />;\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container-fluid shop\">\n        <div className=\"col-12\">\n          {userPackage ? (\n            <>\n              <div className=\"row align-items-center justify-content-center mt-4\">\n                <p className=\"titleshop2\">La formule Free à 0 € {userPackage.name == \"Free\" && \"(actuelle)\"}</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Parcours entretien illimité\"\n                />\n              </div>\n              {userPackage.name != \"Free\" && (\n                <div className=\"row align-items-center justify-content-center\">\n                  <button\n                    className=\"buttonshop\"\n                    onClick={() => {\n                      handleSubmitChangePackage(\"5fd776ffe2b67bdc3438888b\");\n                    }}\n                    type=\"button\"\n                  >\n                    Je la veux!\n                  </button>\n                </div>\n              )}\n              <Divider variant=\"middle\" className={classes.divider} />\n              <div className=\"row align-items-center justify-content-center mt-4\">\n                <p className=\"titleshop2\">La formule + à 9 € {userPackage.name == \"+\" && \"(actuelle)\"}</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Parcours entretien illimité\"\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Rapports approfondis\"\n                />\n              </div>\n              {userPackage.name != \"+\" && (\n                <div className=\"row align-items-center justify-content-center\">\n                  <button\n                    className=\"buttonshop\"\n                    onClick={() => {\n                      userPackage.name == \"Free\" && setPrice(\"Payer 9,00 €\");\n                      userPackage.name == \"Free\" && setPackageId(\"5fd777ddab2c4ddc51207488\");\n                      userPackage.name == \"Pro\" && handleSubmitChangePackage(\"5fd777ddab2c4ddc51207488\");\n                    }}\n                    type=\"button\"\n                  >\n                    Je la veux!\n                  </button>\n                </div>\n              )}\n              <Divider variant=\"middle\" className={classes.divider} />\n              <div className=\"row align-items-center justify-content-center mt-4\">\n                <p className=\"titleshop2\">La formule Pro à 19 € {userPackage.name == \"Pro\" && \"(actuelle)\"}</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Parcours entretien illimité\"\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Rapports approfondis\"\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center mt-2 rowcheckbox\">\n                <FormControlLabel\n                  value=\"end\"\n                  control={<BlueCheckbox name=\"checked\" defaultChecked />}\n                  label=\"Suivi avec un coach\"\n                />\n              </div>\n              {userPackage.name != \"Pro\" && (\n                <div className=\"row align-items-center justify-content-center mt-2\">\n                  <button\n                    className=\"buttonshop\"\n                    onClick={() => {\n                      setPrice(\"Payer 19,00 €\");\n                      setPackageId(\"5fd77864b6d0a5dc87b398db\");\n                    }}\n                    type=\"button\"\n                  >\n                    Je la veux!\n                  </button>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"row align-items-center justify-content-center\">\n              <p className=\"textshop\">{listErrors}</p>\n            </div>\n          )}\n        </div>\n        <Modal\n          show={overlayVisible}\n          dialogClassName=\"overlaydialogshop\"\n          contentClassName=\"overlaycontentshop\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n          size=\"lg\"\n        >\n          <Modal.Body>\n            <div className=\"col\">\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"titleshop2\">Payer par carte</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <ValidationTextField\n                  className={classes.margin}\n                  label=\"Nom du titulaire de la carte\"\n                  required\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={usernameCard}\n                  onChange={(e) => setUsernameCard(e.target.value)}\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <ValidationTextField\n                  className={classes.margin}\n                  label=\"Numéros de la carte\"\n                  required\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={creditCardNumbers}\n                  onChange={(e) => setCreditCardNumbers(e.target.value)}\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <ValidationTextField\n                  className={classes.margin}\n                  label=\"Mois d'expiration\"\n                  required\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={expirationMonth}\n                  onChange={(e) => setExpirationMonth(e.target.value)}\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <ValidationTextField\n                  className={classes.margin}\n                  label=\"Année d'expiration\"\n                  required\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={expirationYear}\n                  onChange={(e) => setExpirationYear(e.target.value)}\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <ValidationTextField\n                  className={classes.margin}\n                  label=\"CVC\"\n                  required\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={CVC}\n                  onChange={(e) => setCVC(e.target.value)}\n                />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"textshop\">{errorInformationPayment}</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <button\n                  className=\"buttonshop2\"\n                  onClick={() => {\n                    handleSubmitPay();\n                  }}\n                  type=\"button\"\n                >\n                  {price}\n                </button>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"textshop\">{errorPayment}</p>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n\n        <Modal\n          show={overlayVisible2}\n          dialogClassName=\"overlaydialogshop\"\n          contentClassName=\"overlaycontentshop\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n          size=\"lg\"\n        >\n          <Modal.Body>\n            <div className=\"col\">\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"titleshop2\">\n                  {\" \"}\n                  Bravo {username} ! Ton paiement s'est bien passé, et tu as désormais accès à plus de fonctionnalités !\n                </p>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <button\n                  className=\"buttonshop\"\n                  onClick={() => {\n                    toggleOverlay2();\n                    setRedirectAccount(true);\n                  }}\n                  type=\"button\"\n                >\n                  OK\n                </button>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.username,\n  };\n}\n\nexport default connect(mapStateToProps, null)(ShopScreen);\n",["143","144"],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/InterviewScreenResult.js",["145","146","147","148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Image, Modal } from \"react-bootstrap\";\nimport \"../stylesheets/interviewscreenresult.css\";\nimport { connect } from \"react-redux\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Box from \"@material-ui/core/Box\";\nimport { VictoryBar, VictoryChart, VictoryPie } from \"victory\";\nimport NavBar from \"./NavBar\";\n\nfunction InterviewScreenResult({ username, score, detailedscore, job, county }) {\n  const [rating, setRating] = useState(0);\n  const [overlayVisible, setOverlayVisible] = useState(false);\n  const [overlayVisible2, setOverlayVisible2] = useState(false);\n  const [listErrorsNewTrophy, setListErrorsNewTrophy] = useState([]);\n  const [lastTrophy, setLastTrophy] = useState(\"\");\n  const [salary, setSalary] = useState(\"Aucune donnée disponible\");\n  const [userPackage, setUserPackage] = useState();\n  const [categoriesScores, setCategoriesScores] = useState();\n  const [listErrors, setListErrors] = useState();\n  const [redirectAdvices, setRedirectAdvices] = useState(false);\n  const [redirectInterview, setRedirectInterview] = useState(false);\n  const [redirectAccount, setRedirectAccount] = useState(false);\n\n  let trophy;\n\n  useEffect(() => {\n    //gestion des résultats par catégorie dans les statistiques détaillées\n    var categories = [\n      \"Parler de soi\",\n      \"Storytelling\",\n      \"Préparatifs de l’entretien\",\n      \"Projection dans l’entreprise\",\n      \"Négociation\",\n    ];\n\n    var categoriesScores = categories.map((category) => {\n      let indices = [];\n      var idx = detailedscore.category.indexOf(category);\n      while (idx !== -1) {\n        indices.push(idx);\n        idx = detailedscore.category.indexOf(category, idx + 1);\n      }\n\n      let scoreCategory;\n      if (indices.length > 0) {\n        scoreCategory = indices.map((indice) => {\n          let indiceScore = detailedscore.score[indice];\n          return indiceScore;\n        });\n      }\n\n      let numberPointsFalse;\n      let numberPointsMax;\n      let sumScoreCategory;\n      if (typeof scoreCategory != \"undefined\") {\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        sumScoreCategory = scoreCategory.reduce(reducer);\n        numberPointsMax = indices.length * 10;\n        numberPointsFalse = numberPointsMax - sumScoreCategory;\n        return {\n          category,\n          sumScoreCategory,\n          numberPointsMax,\n          numberPointsFalse,\n        };\n      }\n      return {\n        category: \" \",\n        sumScoreCategory: \" \",\n        numberPointsMax: \" \",\n        numberPointsFalse: \" \",\n      };\n    });\n    //déclenche le setCategoriesScores au chargement de la page pour récupérer les scores détaillés enregistrés dans Redux\n    // pour pouvoir l'afficher dans les statistiques détaillées\n    setCategoriesScores(categoriesScores);\n\n    //gestion du score 5 étoiles\n    let newScore5Star = score / 10 / 2;\n    //déclenche le setRating au chargement de la page pour récupérer le dernier score enregistré dans Redux\n    // pour pouvoir l'afficher ici dans InterviewScreenResult\n    setRating(newScore5Star);\n\n    //calcul du salaire d'embauche en récupérant les infos stockées dans redux et en appelant la route du back correspondante\n    const calculateSalary = async () => {\n      const data = await fetch(`/scrape-salary?job=${job}&county=${county}`);\n      const body = await data.json();\n      if (body.result === true) {\n        setSalary(body.salary);\n      }\n    };\n    calculateSalary();\n\n    //charge le package du user via le Back (via la BDD)\n    const fetchData = async () => {\n      const data = await fetch(`/shopfind-package?usernameFromFront=${username}`);\n      const body = await data.json();\n      if (body.result === true) {\n        setUserPackage(body.packageDataBase);\n      } else {\n        setListErrors(body.error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  //Process NewTrophy : se déclenche via le bouton \"suivant\" après les conseils suite au dernier entretien\n  //récupère le dernier trophée gagné dans la BDD via le Back pour pouvoir le montrer à l'utilisateur\n  const handleSubmitNewTrophy = async () => {\n    const data = await fetch(`/interviewfind-lasttrophy?usernameFromFront=${username}`);\n    const body = await data.json();\n\n    if (body.result === true) {\n      setLastTrophy(body.lastTrophyToShow); //on stocke dans un état le trophée récupéré du back\n      setListErrorsNewTrophy(body.error);\n    }\n  };\n\n  // vérification du nombre du trophée stocké précédemment dans l'état pour pouvoir attribuer une image de trophée en fonction\n  if (lastTrophy.number) {\n    if (lastTrophy.number == 1) {\n      trophy = \"../images/badgeparfait.png\";\n    } else if (lastTrophy.number == 2) {\n      trophy = \"../images/badgepresqueparfait.png\";\n    } else {\n      trophy = \"../images/badgeaparfaire.png\";\n    }\n  }\n\n  //message en dessous du bouton Statistiques détaillées si le user a un compte \"Free\" car il ne peut pas y accéder\n  const TextNoStats = <p className=\"textinterviewresult2\">Upgrade ton compte pour voir les statistiques !</p>;\n\n  // déclenche la redirection vers la page Interview Screen Home si le user clique sur le bouton refaire un entretien\n  if (redirectInterview) {\n    return <Redirect to=\"/interviewscreenhome\" />;\n  }\n\n  // déclenche la redirection vers la page Interview Screen Result si le user clique sur le bouton voir les conseils\n  if (redirectAdvices) {\n    return <Redirect to=\"/advices\" />;\n  }\n\n  // déclenche la redirection vers la page Mon Compte si le user clique sur le bouton Mon Compte dans l'overlay2 du trophée\n  if (redirectAccount) {\n    return <Redirect to=\"/account\" />;\n  }\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"container-fluid interviewresult\">\n        <div className=\"col-12\">\n          <div className=\"row align-items-center justify-content-center\">\n            <p className=\"titleinterviewresult2\">Mon score</p>\n          </div>\n          <div className=\"row align-items-center justify-content-center\">\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Rating name=\"half-rating-read\" size=\"large\" value={rating} precision={0.1} readOnly />\n            </Box>\n          </div>\n          {userPackage ? (\n            <>\n              {userPackage.name == \"Free\" && TextNoStats}\n              <div className=\"row align-items-center justify-content-center\">\n                <button\n                  className=\"buttoninterviewresult2\"\n                  onClick={() => {\n                    (userPackage.name == \"+\" || userPackage.name == \"Pro\") && setOverlayVisible(true);\n                  }}\n                  type=\"button\"\n                >\n                  Statistiques détaillées\n                </button>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"textinterviewresult\">{listErrors}</p>\n              </div>\n            </>\n          )}\n          <div className=\"row align-items-center justify-content-center\">\n            <p className=\"textinterviewresult\">Votre salaire d'embauche : {salary} bruts annuel</p>\n          </div>\n          <div className=\"row align-items-center justify-content-center mb-4\">\n            <p className=\"texticopresult\">Bravo {username} ! C'était un entretien rondement mené !</p>\n            <Image src=\"../images/MikeChickenLeft.png\" className=\"imageinterviewresult\" />\n          </div>\n          <div className=\"row align-items-center justify-content-center\">\n            <p className=\"texticopresult\">Vous devriez vous perfectionner sur :</p>\n          </div>\n          {categoriesScores && (\n            <>\n              {categoriesScores.map(\n                (categoriescore, i) =>\n                  categoriescore.numberPointsFalse >= 6 && (\n                    <div key={i} className=\"row align-items-center justify-content-center\">\n                      <p className=\"textcategoryresult\">{categoriescore.category}</p>\n                    </div>\n                  )\n              )}\n            </>\n          )}\n          <div className=\"row align-items-center justify-content-center\">\n            <button\n              className=\"buttoninterviewresult2\"\n              onClick={() => {\n                setRedirectAdvices(true);\n              }}\n              type=\"button\"\n            >\n              Voir les conseils\n            </button>\n            <button\n              className=\"buttoninterviewresult2\"\n              onClick={() => {\n                setRedirectInterview(true);\n              }}\n              type=\"button\"\n            >\n              Refaire un entretien !\n            </button>\n          </div>\n          <div className=\"row align-items-center justify-content-center\">\n            <button\n              className=\"buttoninterviewresult\"\n              onClick={() => {\n                setOverlayVisible2(true);\n                handleSubmitNewTrophy();\n              }}\n              type=\"button\"\n            >\n              >\n            </button>\n          </div>\n        </div>\n        <Modal\n          show={overlayVisible}\n          dialogClassName=\"overlaydialoginterviewresult\"\n          contentClassName=\"overlaycontentinterviewresult\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n          size=\"lg\"\n        >\n          <Modal.Body>\n            {categoriesScores && (\n              <>\n                <div className=\"col\">\n                  <div className=\"row align-items-center justify-content-center\">\n                    <p className=\"titleinterviewresult\">Résultats par question</p>\n                  </div>\n                  <div className=\"row align-items-center justify-content-center\">\n                    <VictoryChart\n                      padding={{ top: 5, bottom: 40, left: 50, right: 50 }}\n                      domainPadding={20}\n                      height={220}\n                      width={430}\n                    >\n                      <VictoryBar\n                        style={{\n                          data: { fill: \"#E8C518\", stroke: \"#0773A3\", strokeWidth: 1 },\n                        }}\n                        data={[\n                          { x: \"q1\", y: detailedscore.score[0] },\n                          { x: \"q2\", y: detailedscore.score[1] },\n                          { x: \"q3\", y: detailedscore.score[2] },\n                          { x: \"q4\", y: detailedscore.score[3] },\n                          { x: \"q5\", y: detailedscore.score[4] },\n                          { x: \"q6\", y: detailedscore.score[5] },\n                          { x: \"q7\", y: detailedscore.score[6] },\n                          { x: \"q8\", y: detailedscore.score[7] },\n                          { x: \"q9\", y: detailedscore.score[8] },\n                          { x: \"q10\", y: detailedscore.score[9] },\n                        ]}\n                        cornerRadius={5}\n                      />\n                    </VictoryChart>\n                  </div>\n                  <div className=\"row align-items-center justify-content-center mt-5\">\n                    <p className=\"titleinterviewresult\">Résultats par catégorie</p>\n                  </div>\n                  <div className=\"row align-items-center justify-content-center\">\n                    <VictoryPie\n                      data={[\n                        {\n                          x: `Parler de soi \\n ${categoriesScores[0].sumScoreCategory}/${categoriesScores[0].numberPointsMax}`,\n                          y: categoriesScores[0].sumScoreCategory,\n                        },\n                        {\n                          x: \" \",\n                          y: categoriesScores[0].numberPointsFalse,\n                        },\n                        {\n                          x: `Storytelling \\n ${categoriesScores[1].sumScoreCategory}/${categoriesScores[1].numberPointsMax}`,\n                          y: categoriesScores[1].sumScoreCategory,\n                        },\n                        {\n                          x: \" \",\n                          y: categoriesScores[1].numberPointsFalse,\n                        },\n                        {\n                          x: `Préparatifs \\n ${categoriesScores[2].sumScoreCategory}/${categoriesScores[2].numberPointsMax}`,\n                          y: categoriesScores[2].sumScoreCategory,\n                        },\n                        {\n                          x: \" \",\n                          y: categoriesScores[2].numberPointsFalse,\n                        },\n                        {\n                          x: `Projection \\n ${categoriesScores[3].sumScoreCategory}/${categoriesScores[3].numberPointsMax}`,\n                          y: categoriesScores[3].sumScoreCategory,\n                        },\n                        {\n                          x: \" \",\n                          y: categoriesScores[3].numberPointsFalse,\n                        },\n                        {\n                          x: `Négociation \\n ${categoriesScores[4].sumScoreCategory}/${categoriesScores[4].numberPointsMax}`,\n                          y: categoriesScores[4].sumScoreCategory,\n                        },\n                        {\n                          x: \" \",\n                          y: categoriesScores[4].numberPointsFalse,\n                        },\n                      ]}\n                      height={280}\n                      padding={{ top: 50, bottom: 50, left: 20, right: 20 }}\n                      colorScale={[\n                        \"#ED1C24\",\n                        \"#ED1C24B3\",\n                        \"#E8C518\",\n                        \"#E8C518B3\",\n                        \"#208C58\",\n                        \"#208C58B3\",\n                        \"#0773A3\",\n                        \"#0773A3B3\",\n                        \"#333333\",\n                        \"#333333B3\",\n                      ]}\n                      cornerRadius={0}\n                    />\n                  </div>\n                  <div className=\"row align-items-center justify-content-center\">\n                    <button\n                      className=\"buttoninterviewresult5\"\n                      onClick={() => {\n                        setOverlayVisible(false);\n                      }}\n                      type=\"button\"\n                    >\n                      Ok\n                    </button>\n                  </div>\n                </div>\n              </>\n            )}\n          </Modal.Body>\n        </Modal>\n\n        <Modal\n          show={overlayVisible2}\n          dialogClassName=\"overlaydialoginterviewresult\"\n          contentClassName=\"overlaycontentinterviewresult\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n          centered\n          size=\"lg\"\n        >\n          <Modal.Body>\n            <div className=\"col\">\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"titleinterviewresult\">\n                  Vous avez gagné le trophée {\"\\n\"} {lastTrophy.name}\n                </p>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <Image src={trophy} className=\"trophyresult\" />\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <p className=\"textinterviewresult\">{listErrorsNewTrophy}</p>\n              </div>\n              <div className=\"row align-items-center justify-content-center\">\n                <button\n                  className=\"buttoninterviewresult4\"\n                  onClick={() => {\n                    setOverlayVisible2(false);\n                    setRedirectAccount(true);\n                  }}\n                  type=\"button\"\n                >\n                  Mon Compte\n                </button>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    username: state.username,\n    score: state.score,\n    detailedscore: state.detailedscore,\n    job: state.job,\n    county: state.county,\n  };\n}\n\nexport default connect(mapStateToProps, null)(InterviewScreenResult);\n","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/index.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/WelcomeScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/AccountScreen.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/reducers/county.reducer.js",["151","152"],"export default function (county = \"\", action) {\n    if (action.type == \"saveCounty\") {\n      return action.county;\n    } else {\n      return county;\n    }\n  }\n  ","/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/NavBar.js",[],"/Users/margaux/lacapsule/REACT PROJECTS/InterviewCopReact/frontend/src/components/NavBar2.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":2,"column":19,"nodeType":"164","messageId":"165","endLine":2,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":4},{"ruleId":"162","severity":1,"message":"163","line":2,"column":21,"nodeType":"164","messageId":"165","endLine":2,"endColumn":23},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":37,"column":6,"nodeType":"170","endLine":37,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":101,"column":6,"nodeType":"170","endLine":101,"endColumn":13,"suggestions":"173"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":2,"column":19,"nodeType":"164","messageId":"165","endLine":2,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":4},{"ruleId":"162","severity":1,"message":"163","line":2,"column":21,"nodeType":"164","messageId":"165","endLine":2,"endColumn":23},{"ruleId":"153","replacedBy":"174"},{"ruleId":"155","replacedBy":"175"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":4},{"ruleId":"162","severity":1,"message":"163","line":2,"column":21,"nodeType":"164","messageId":"165","endLine":2,"endColumn":23},{"ruleId":"153","replacedBy":"176"},{"ruleId":"155","replacedBy":"177"},{"ruleId":"168","severity":1,"message":"178","line":123,"column":6,"nodeType":"170","endLine":123,"endColumn":8,"suggestions":"179"},{"ruleId":"168","severity":1,"message":"180","line":138,"column":6,"nodeType":"170","endLine":138,"endColumn":17,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"163","line":152,"column":33,"nodeType":"164","messageId":"165","endLine":152,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":153,"column":30,"nodeType":"164","messageId":"165","endLine":153,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":154,"column":29,"nodeType":"164","messageId":"165","endLine":154,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":155,"column":25,"nodeType":"164","messageId":"165","endLine":155,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":165,"column":19,"nodeType":"164","messageId":"165","endLine":165,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":208,"column":83,"nodeType":"164","messageId":"165","endLine":208,"endColumn":85},{"ruleId":"162","severity":1,"message":"182","line":217,"column":33,"nodeType":"164","messageId":"165","endLine":217,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":232,"column":80,"nodeType":"164","messageId":"165","endLine":232,"endColumn":82},{"ruleId":"162","severity":1,"message":"182","line":248,"column":33,"nodeType":"164","messageId":"165","endLine":248,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":253,"column":40,"nodeType":"164","messageId":"165","endLine":253,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":254,"column":40,"nodeType":"164","messageId":"165","endLine":254,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":255,"column":40,"nodeType":"164","messageId":"165","endLine":255,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":265,"column":83,"nodeType":"164","messageId":"165","endLine":265,"endColumn":85},{"ruleId":"162","severity":1,"message":"182","line":288,"column":33,"nodeType":"164","messageId":"165","endLine":288,"endColumn":35},{"ruleId":"153","replacedBy":"183"},{"ruleId":"155","replacedBy":"184"},{"ruleId":"168","severity":1,"message":"185","line":106,"column":6,"nodeType":"170","endLine":106,"endColumn":8,"suggestions":"186"},{"ruleId":"162","severity":1,"message":"163","line":122,"column":27,"nodeType":"164","messageId":"165","endLine":122,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":124,"column":34,"nodeType":"164","messageId":"165","endLine":124,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":164,"column":33,"nodeType":"164","messageId":"165","endLine":164,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":169,"column":39,"nodeType":"164","messageId":"165","endLine":169,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":169,"column":66,"nodeType":"164","messageId":"165","endLine":169,"endColumn":68},{"ruleId":"159","severity":1,"message":"160","line":1,"column":1,"nodeType":"161","endLine":7,"endColumn":4},{"ruleId":"162","severity":1,"message":"163","line":2,"column":21,"nodeType":"164","messageId":"165","endLine":2,"endColumn":23},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],["187"],["188"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["187"],["188"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'icop'. Either include it or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has a missing dependency: 'handleSubmitLastQuestion'. Either include it or remove the dependency array.",["190"],["187"],["188"],["187"],["188"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'toggleOverlay'. Either include it or remove the dependency array.",["192"],"Expected '!==' and instead saw '!='.",["187"],["188"],"React Hook useEffect has missing dependencies: 'county', 'detailedscore.category', 'detailedscore.score', 'job', 'score', and 'username'. Either include them or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [icop]",{"range":"204","text":"205"},"Update the dependencies array to be: [handleSubmitLastQuestion, score]",{"range":"206","text":"207"},"Update the dependencies array to be: [username]",{"range":"208","text":"209"},"Update the dependencies array to be: [packageId, toggleOverlay]",{"range":"210","text":"211"},"Update the dependencies array to be: [county, detailedscore.category, detailedscore.score, job, score, username]",{"range":"212","text":"213"},[1944,1946],"[icop]",[4098,4105],"[handleSubmitLastQuestion, score]",[3407,3409],"[username]",[3716,3727],"[packageId, toggleOverlay]",[3937,3939],"[county, detailedscore.category, detailedscore.score, job, score, username]"]